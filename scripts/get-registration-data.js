const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function getDataForRegistration() {
  try {
    console.log('üè¢ Obteniendo organizaciones...')
    const organizaciones = await prisma.organizacion.findMany({
      select: {
        idOrganizacion: true,
        razonSocial: true,
        ruc: true
      }
    })
    
    console.log('üèôÔ∏è Obteniendo ciudades...')
    const ciudades = await prisma.ciudad.findMany({
      select: {
        idCiudad: true,
        nombreCiudad: true
      }
    })
    
    console.log('\nüìã DATOS DISPONIBLES PARA REGISTRO:\n')
    
    console.log('üè¢ ORGANIZACIONES:')
    organizaciones.forEach(org => {
      console.log(`  - ${org.razonSocial} (ID: ${org.idOrganizacion}, RUC: ${org.ruc})`)
    })
    
    console.log('\nüèôÔ∏è CIUDADES:')
    ciudades.forEach(ciudad => {
      console.log(`  - ${ciudad.nombreCiudad} (ID: ${ciudad.idCiudad})`)
    })
    
    console.log('\nüß™ USUARIO DE PRUEBA SUGERIDO:')
    console.log('  Email: test@example.com')
    console.log('  Contrase√±a: Test123456!')
    console.log('  Nombre: Juan')
    console.log('  Apellido: P√©rez')
    console.log('  Documento: 12345678')
    console.log('  Tel√©fono: 0981234567')
    console.log('  Direcci√≥n: Calle Test 123')
    console.log(`  Ciudad: ${ciudades[0]?.nombreCiudad} (ID: ${ciudades[0]?.idCiudad})`)
    console.log(`  Organizaci√≥n: ${organizaciones[0]?.razonSocial} (ID: ${organizaciones[0]?.idOrganizacion})`)
    
    return { organizaciones, ciudades }
  } catch (error) {
    console.error('‚ùå Error obteniendo datos:', error)
  } finally {
    await prisma.$disconnect()
  }
}

getDataForRegistration()
