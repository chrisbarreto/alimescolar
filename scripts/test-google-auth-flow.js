// Script para probar el flujo completo de autenticaci√≥n con Google
const { createClient } = require('@supabase/supabase-js')

// Configurar cliente de Supabase
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
)

async function testGoogleAuthFlow() {
  console.log('üß™ Probando flujo de autenticaci√≥n con Google...')
  
  try {
    // 1. Verificar configuraci√≥n de OAuth
    console.log('üîß Verificando configuraci√≥n...')
    console.log('- Supabase URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? '‚úÖ Configurado' : '‚ùå Falta')
    console.log('- Supabase Key:', process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ Configurado' : '‚ùå Falta')
    
    // 2. Probar endpoint de organizaciones
    console.log('\nüìã Probando endpoint de organizaciones...')
    const orgsResponse = await fetch('http://localhost:3001/api/organizaciones')
    const orgs = await orgsResponse.json()
    console.log('- Organizaciones disponibles:', orgs.length)
    
    // 3. Simular verificaci√≥n de usuario existente
    console.log('\nüîç Probando verificaci√≥n de usuario...')
    const checkResponse = await fetch('http://localhost:3001/api/user/check-organization', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        supabaseId: 'test-supabase-id',
        email: 'test@ejemplo.com'
      })
    })
    const checkData = await checkResponse.json()
    console.log('- Usuario encontrado:', checkData.hasOrganization ? '‚úÖ S√≠' : '‚ùå No')
    
    console.log('\n‚úÖ Endpoints funcionando correctamente!')
    console.log('\nüìù Para probar el flujo completo:')
    console.log('1. Ve a http://localhost:3001/login')
    console.log('2. Haz clic en "Iniciar sesi√≥n con Google"')
    console.log('3. Selecciona una organizaci√≥n si es usuario nuevo')
    console.log('4. Deber√≠as ser redirigido al dashboard')
    
  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.message)
  }
}

testGoogleAuthFlow()
